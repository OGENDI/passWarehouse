import string, random
import pyperclip
from user_details import User_account

class User_credentials:
    '''
    Create credentials class
    '''
    
    credentials = []
    def user_verification(cls,username,password):
        '''
        method used to check if user exits in our list before creating
        '''
        profile = ' '
        for user in User_account.user_accounts:
            if user.username == username and user.password == password:
                profile == user.username
        return profile

    def __init__(self,my_account,username,password):
        '''
        function that instantiates user account credentials to be stored
        '''
        self.my_account = my_account
        self.username = username
        self.password = password

    def save_credentials(self):
        '''
        method that stores created user credentials to the credentials list
        '''
        User_credentials.credentials.append(self)
    
    def delete_user_credential(self):
        '''
        method that deletes user credentials from the credentials list
        '''
        User_credentials.credentials.remove(self)
    
    def gen_random_password(length_of_password=8):
        '''
        method that enables user to have an autogenerated password for his/her account
        '''
        user_password = string.ascii_letters + string.digits
        return ''.join(random.choice(user_password)
                        for char in range(length_of_password)
                        )
    
    @classmethod
    def find_user_credential(cls, user_account):
        '''
        method finds user credentials that matches account name passed
        '''
        for user_credential in cls.credentials:
            if user_credential.my_account == user_account:
                return user_credential

    @classmethod
    def do_credentials_exist(cls,account):
        '''
        checks if user credentials exist in the credentials list.
        '''
        for credential_check in cls.credentials:
            if credential_check.my_account == account:
                return True
        return False
    
    @classmethod
    def display_user_credentials(cls):
        '''
        method returns list of existing user credentials
        '''
        return cls.credentials

    @classmethod
    def copy_login_password(cls,user_account):
        credential_found = User_credentials.find_user_credential(user_account)
        pyperclip.copy(credential_found.password)

    
            

                        




